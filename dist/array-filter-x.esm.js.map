{"version":3,"sources":["../src/array-filter-x.js"],"names":[],"mappings":"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","file":"array-filter-x.esm.js","sourcesContent":["import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport all from 'array-all-x';\nimport toBoolean from 'to-boolean-x';\nimport methodize from 'simple-methodize-x';\nimport call from 'simple-call-x';\n\nconst nf = [].filter;\nconst nativeFilter = typeof nf === 'function' && methodize(nf);\n\nconst test1 = function test1() {\n  let spy = 0;\n  const res = attempt(function attemptee() {\n    return nativeFilter([1, 2], function spyAdd1(item) {\n      spy += item;\n\n      return false;\n    });\n  });\n\n  return res.threw === false && res.value && res.value.length === 0 && spy === 3;\n};\n\nconst test2 = function test2() {\n  let spy = '';\n  const res = attempt(function attemptee() {\n    return nativeFilter(toObject('abc'), function spyAdd2(item, index) {\n      spy += item;\n\n      return index === 1;\n    });\n  });\n\n  return res.threw === false && res.value && res.value.length === 1 && res.value[0] === 'b' && spy === 'abc';\n};\n\nconst test3 = function test3() {\n  let spy = 0;\n  const res = attempt(function attemptee() {\n    const args = (function getArgs() {\n      /* eslint-disable-next-line prefer-rest-params */\n      return arguments;\n    })(1, 2, 3);\n\n    return nativeFilter(args, function spyAdd3(item, index) {\n      spy += item;\n\n      return index === 2;\n    });\n  });\n\n  return res.threw === false && res.value && res.value.length === 1 && res.value[0] === 3 && spy === 6;\n};\n\nconst test4 = function test4() {\n  let spy = 0;\n  const res = attempt(function attemptee() {\n    return nativeFilter({0: 1, 1: 2, 3: 3, 4: 4, length: 4}, function spyAdd4(item) {\n      spy += item;\n\n      return false;\n    });\n  });\n\n  return res.threw === false && res.value && res.value.length === 0 && spy === 6;\n};\n\nconst getTest5Result = function getTest5Result(args) {\n  const [res, div, spy] = args;\n\n  return res.threw === false && res.value && res.value.length === 1 && res.value[0] === div && spy === div;\n};\n\nconst doc = typeof document !== 'undefined' && document;\n\nconst test5 = function test5() {\n  if (doc) {\n    let spy = null;\n    const fragment = doc.createDocumentFragment();\n    const div = doc.createElement('div');\n    fragment.appendChild(div);\n    const res = attempt(function attemptee() {\n      return nativeFilter(fragment.childNodes, function spyAssign(item) {\n        spy = item;\n\n        return item;\n      });\n    });\n\n    return getTest5Result([res, div, spy]);\n  }\n\n  return true;\n};\n\nconst isStrict = (function returnIsStrict() {\n  /* eslint-disable-next-line babel/no-invalid-this */\n  return toBoolean(this) === false;\n})();\n\nconst test6 = function test6() {\n  if (isStrict) {\n    let spy = null;\n\n    const testThis = function testThis() {\n      /* eslint-disable-next-line babel/no-invalid-this */\n      spy = typeof this === 'string';\n    };\n\n    const res = attempt(function attemptee() {\n      return nativeFilter([1], testThis, 'x');\n    });\n\n    return res.threw === false && res.value && res.value.length === 0 && spy === true;\n  }\n\n  return true;\n};\n\nconst test7 = function test7() {\n  const spy = {};\n  const fn =\n    'return nativeFilter(\"foo\", function (_, __, context) {' +\n    'if (castBoolean(context) === false || typeof context !== \"object\") {' +\n    'spy.value = true;}});';\n\n  const res = attempt(function attemptee() {\n    /* eslint-disable-next-line no-new-func */\n    return Function('nativeFilter', 'spy', 'castBoolean', fn)(nativeFilter, spy, toBoolean);\n  });\n\n  return res.threw === false && res.value && res.value.length === 0 && spy.value !== true;\n};\n\nconst isWorking = toBoolean(nativeFilter) && test1() && test2() && test3() && test4() && test5() && test6() && test7();\n\nconst patchedFilter = function filter(array, callBack /* , thisArg */) {\n  /* eslint-disable-next-line prefer-rest-params, */\n  return nativeFilter(requireObjectCoercible(array), assertIsFunction(callBack), arguments[2]);\n};\n\nexport const implementation = function filter(array, callBack /* , thisArg */) {\n  const object = toObject(array);\n  // If no callback function or if callback is not a callable function\n  assertIsFunction(callBack);\n\n  const result = [];\n\n  const predicate = function predicate() {\n    /* eslint-disable-next-line prefer-rest-params */\n    const i = arguments[1];\n\n    /* eslint-disable-next-line prefer-rest-params */\n    if (i in arguments[2]) {\n      /* eslint-disable-next-line prefer-rest-params */\n      const item = arguments[0];\n\n      /* eslint-disable-next-line babel/no-invalid-this */\n      if (call(callBack, this, [item, i, object])) {\n        result[result.length] = item;\n      }\n    }\n  };\n\n  /* eslint-disable-next-line prefer-rest-params */\n  all(object, predicate, arguments[2]);\n\n  return result;\n};\n\n/**\n * This method creates a new array with all elements that pass the test\n * implemented by the provided function.\n *\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function is a predicate, to test each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n * @returns {Array} A new array with the elements that pass the test.\n */\nconst $filter = isWorking ? patchedFilter : implementation;\n\nexport default $filter;\n"]}